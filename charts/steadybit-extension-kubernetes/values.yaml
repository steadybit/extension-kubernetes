# Default values for steadybit-extension-kubernetes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
kubernetes:
  # kubernetes.clusterName -- The name of the kubernetes cluster
  clusterName: null
  # kubernetes.namespaceFilter -- The namespace filter for the extension. If set, the extension will only discover resources in this namespace.
  namespaceFilter: null

image:
  # image.name -- The container image to use for the steadybit Kubernetes extension.
  name: ghcr.io/steadybit/extension-kubernetes
  # image.tag -- tag name of the extension-kubernetes container image to use. Defaults to appVersion of this chart.
  # See https://hub.docker.com/r/steadybit/extension-kubernetes for all tags.
  tag: null
  # image.pullPolicy -- Specifies when to pull the image container.
  pullPolicy: IfNotPresent

tls:
  server:
    certificate:
      # tls.server.certificate.fromSecret -- The name of the secret containing the TLS certificate for the extension.
      #  The extension will then create an HTTPS server instead of an HTTP server.
      fromSecret: null
      # tls.server.certificate.path --Path to the TLS certificate for the extension.
      path: null
      key:
        # tls.server.certificate.key-path --Path to the key for the TLS certificate for the extension.
        path: null
  client:
    certificates:
      # tls.client.certificates.fromSecrets -- List of secret names containing TLS certificates for the extension to trust.
      #  The extension will require clients to authenticate using one of these certificates. In essence, this will enable mutual TLS.
      fromSecrets: []
      # tls.client.certificates.paths -- List paths containing TLS certificates for the extension to trust.
      #  The extension will require clients to authenticate using one of these certificates. In essence, this will enable mutual TLS.
      paths: []

logging:
  # logging.level -- The active log level. Valid values are: TRACE, DEBUG, INFO, WARN, ERROR
  level: INFO
  # logging.format -- The format of the log entries. One of text, json
  format: text

probes:
  # probes.readiness.* -- Configuration of the Kubernetes readiness probe
  readiness:
    # probes.readiness.initialDelaySeconds -- Specifies the initialDelaySeconds for the readiness probe.
    #  You might want to increase this value depending on your cluster size. Customers with 2500 Container / 500 Deployments are reporting startup times around 5s.
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  # probes.liveness.* -- Configuration of the Kubernetes liveness probe
  liveness:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 5
    successThreshold: 1

resources:
  requests:
    # resources.requests.memory -- The minimal amount of memory needed
    memory: "32Mi"
    # resources.requests.cpu -- The minimal amount of cpu shares needed
    cpu: "50m"
  limits:
    # resources.limits.memory -- The limit of memory to be used
    #  You might want to increase this value depending on your cluster size. Customers with 2500 Container / 500 Deployments are reporting memory usage around 400Mi.
    memory: "256Mi"
    # resources.limits.cpu -- The limit of cpu share to be used during its interval
    cpu: "500m"

serviceAccount:
  # serviceAccount.create -- Specifies whether a ServiceAccount should be created.
  create: true
  # serviceAccount.name -- The name of the ServiceAccount to use.
  name: steadybit-extension-kubernetes

clusterRole:
  # clusterRole.create -- Specifies whether a ClusterRole should be created.
  create: true
  # clusterRole.name -- The name of the ClusterRole to use.
  name: steadybit-extension-kubernetes

clusterRoleBinding:
  # clusterRoleBinding.create -- Specifies whether a ClusterRoleBinding should be created.
  create: true
  # clusterRoleBinding.name -- The name of the ClusterRoleBinding to use.
  name: steadybit-extension-kubernetes

# If cluster role creation is prohibited, you can use role instead with a role binding.
role:
  # role.create -- Specifies whether a role should be created.
  create: false
  # role.name -- The name of the role to use.
  name: steadybit-extension-kubernetes

roleBinding:
  # roleBinding.create -- Specifies whether a roleBinding should be created.
  create: false
  # roleBinding.name -- The name of the roleBinding to use.
  name: steadybit-extension-kubernetes

# extra labels to apply to the Kubernetes resources
extraLabels: {}

# deploymentAnnotations: Additional annotations to be added to the deployment.
deploymentAnnotations: {}

# podAnnotations -- Additional annotations to be added to the pods.
podAnnotations: {}

# podLabels -- Additional labels to be added to the pods.
podLabels: {}

# nodeSelector -- Node labels for pod assignment
nodeSelector: {}

# tolerations -- Tolerations to influence pod assignment
tolerations: []

# topologySpreadConstraints -- Spread constraints to influence pod assignment.
# https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
topologySpreadConstraints: []

# affinity -- Affinities to influence pod assignment.
affinity: {}

# priorityClassName -- Priority class used to influence pod scheduling priority.
priorityClassName: null

# podSecurityContext -- SecurityContext to apply to the pod.
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
  runAsNonRoot: true

# containerSecurityContext -- SecurityContext to apply to the container.
containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# extraEnv -- Array with extra environment variables to add to the container
# e.g:
# extraEnv:
#   - name: FOO
#     value: "bar"
extraEnv: []

# extraEnvFrom -- Array with extra environment variables sources to add to the container
# e.g:
# extraEnvFrom:
#  - configMapRef:
#    name: env-configmap
#  - secretRef:
#    name: env-secrets
extraEnvFrom: []

discovery:
  # discovery.disableExcludes -- Ignore discovery excludes specified by `steadybit.com/discovery-disabled` (mainly for internal use)
  disableExcludes: false
  # discovery.disableAdvice -- Disable the advice / kubescore feature of the extension.
  disableAdvice: false
  # discovery.maxPodCount -- Skip listing pods, containers and hosts for deployments, statefulsets, etc. if there are more then the given pods.
  maxPodCount: 50
  # discovery.refreshThrottle -- Number of seconds between successive refreshes of the target data.
  refreshThrottle: 20
  attributes:
    excludes:
      # discovery.attributes.excludes.container -- List of attributes to exclude from container discovery.
      container: []
      # discovery.attributes.excludes.daemonSet -- List of attributes to exclude from daemonSet discovery.
      daemonSet: []
      # discovery.attributes.excludes.deployment -- List of attributes to exclude from deployment discovery.
      deployment: []
      # discovery.attributes.excludes.ingress -- List of attributes to exclude from deployment discovery.
      ingress: []
      # discovery.attributes.excludes.node -- List of attributes to exclude from deployment discovery.
      node: []
      # discovery.attributes.excludes.pod -- List of attributes to exclude from pod discovery.
      pod: []
      # discovery.attributes.excludes.replicaSet -- List of attributes to exclude from replicaSet discovery.
      replicaSet: []
      # discovery.attributes.excludes.statefulSet -- List of attributes to exclude from statefulSet discovery.
      statefulSet: []
  disabled:
    # discovery.disabled.cluster -- Should the extension skip discovery of cluster targets?
    cluster: false
    # discovery.disabled.container -- Should the extension skip discovery of containers?
    container: false
    # discovery.disabled.daemonSet -- Should the extension skip discovery of daemonSets?
    daemonSet: false
    # discovery.disabled.deployment -- Should the extension skip discovery of deployments?
    deployment: false
    # discovery.disabled.ingress -- Should the extension skip discovery of ingress?
    ingress: false
    # discovery.disabled.node -- Should the extension skip discovery of nodes?
    node: false
    # discovery.disabled.pod -- Should the extension skip discovery of pods?
    pod: false
    # discovery.disabled.replicaSet -- Should the extension skip discovery of replicaSets?
    replicaSet: true
    # discovery.disabled.statefulSet -- Should the extension skip discovery of statefulSets?
    statefulSet: false
service:
  extensionlib:
    list:
      - ACTION
      - DISCOVERY
      - ADVICE
