templates:
  - deployment.yaml
chart:
  appVersion: v0.0.0
tests:
  - it: manifest should match snapshot without TLS
    set:
      kubernetes:
        clusterName: test
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot using podAnnotations and Labels
    set:
      kubernetes:
        clusterName: test
      deploymentAnnotations:
        some-deploy-annotation: "some-deploy-annotation-value"
      podAnnotations:
        some-annotation: "some-annotation-value"
      podLabels:
        some-label: "some-label-value"
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with TLS
    set:
      kubernetes:
        clusterName: test
      tls:
        server:
          certificate:
            fromSecret: server-cert
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with mutual TLS
    set:
      kubernetes:
        clusterName: test
      tls:
        server:
          certificate:
            fromSecret: server-cert
        client:
          certificates:
            fromSecrets:
              - client-cert-a
              - client-cert-a
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with mutual TLS using containerPaths
    set:
      tls:
        server:
          certificate:
            path: /etc/tls/server.crt
            key:
              path: /etc/tls/server.key
        client:
          certificates:
            paths:
              - /etc/tls/ca.crt
              - /etc/tls/ca2.crt
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with extra env vars
    set:
      extraEnv:
        - name: FOO
          value: "bar"
      extraEnvFrom:
        - configMapRef:
          name: env-configmap
        - secretRef:
          name: env-secrets
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with clusterName from parent chart
    set:
      global:
        clusterName: test
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with disabled excludes
    set:
      discovery:
        disableExcludes: true
    asserts:
      - matchSnapshot: { }
  - it: manifest should match snapshot with extra labels
    set:
      extraLabels:
        tags.datadoghq.com/service: steadybit-extension
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with podSecurityContext
    set:
      podSecurityContext:
        runAsUser: 2222
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with priority class
    set:
      priorityClassName: my-priority-class
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with attribute excluded
    set:
      kubernetes:
        clusterName: test
      discovery:
        attributes:
          excludes:
            container:
              - "k8s.label.*"
              - "attribute.123.container"
            daemonSet:
              - "k8s.label.*"
              - "attribute.123.daemonSet"
            deployment:
              - "k8s.label.*"
              - "attribute.123.deployment"
            ingress:
              - "k8s.label.*"
              - "attribute.123.ingress"
            node:
              - "k8s.label.*"
              - "attribute.123.node"
            pod:
              - "k8s.label.*"
              - "attribute.123.pod"
            replicaSet:
              - "k8s.label.*"
              - "attribute.123.replicaSet"
            statefulSet:
              - "k8s.label.*"
              - "attribute.123.statefulSet"
    asserts:
      - matchSnapshot: {}
  - it: manifest should match snapshot with disabled discoveries
    set:
      kubernetes:
        clusterName: test
      discovery:
        disabled:
          cluster: true
          container: true
          daemonSet: true
          deployment: true
          ingress: true
          node: true
          pod: true
          replicaSet: false #default is true
          statefulSet: true
    asserts:
      - matchSnapshot: {}

